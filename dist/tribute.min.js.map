{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n}\n\nif (typeof window !== 'undefined' && typeof window.CustomEvent !== \"function\") {\n  function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n if (typeof window.Event !== 'undefined') {\n   CustomEvent.prototype = window.Event.prototype\n }\n\n  window.CustomEvent = CustomEvent\n}\n","class TributeEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  static keys() {\n    return [\n      {\n        key: 9,\n        value: \"TAB\"\n      },\n      {\n        key: 8,\n        value: \"DELETE\"\n      },\n      {\n        key: 13,\n        value: \"ENTER\"\n      },\n      {\n        key: 27,\n        value: \"ESCAPE\"\n      },\n      {\n        key: 32,\n        value: \"SPACE\"\n      },\n      {\n        key: 38,\n        value: \"UP\"\n      },\n      {\n        key: 40,\n        value: \"DOWN\"\n      }\n    ];\n  }\n\n  bind(element) {\n    element.boundKeydown = this.keydown.bind(element, this);\n    element.boundKeyup = this.keyup.bind(element, this);\n    element.boundInput = this.input.bind(element, this);\n\n    element.addEventListener(\"keydown\", element.boundKeydown, true);\n    element.addEventListener(\"keyup\", element.boundKeyup, true);\n    element.addEventListener(\"input\", element.boundInput, true);\n  }\n\n  unbind(element) {\n    element.removeEventListener(\"keydown\", element.boundKeydown, true);\n    element.removeEventListener(\"keyup\", element.boundKeyup, true);\n    element.removeEventListener(\"input\", element.boundInput, true);\n\n    delete element.boundKeydown;\n    delete element.boundKeyup;\n    delete element.boundInput;\n  }\n\n  keydown(instance, event) {\n    if (instance.shouldDeactivate(event)) {\n      instance.tribute.isActive = false;\n      instance.tribute.hideMenu();\n    }\n\n    let element = this;\n    instance.commandEvent = false;\n\n    TributeEvents.keys().forEach(o => {\n      if (o.key === event.keyCode) {\n        instance.commandEvent = true;\n        instance.callbacks()[o.value.toLowerCase()](event, element);\n      }\n    });\n  }\n\n  input(instance, event) {\n    instance.inputEvent = true;\n    instance.keyup.call(this, instance, event);\n  }\n\n  click(instance, event) {\n    let tribute = instance.tribute;\n    if (tribute.menu && tribute.menu.contains(event.target)) {\n      let li = event.target;\n      event.preventDefault();\n      event.stopPropagation();\n      while (li.nodeName.toLowerCase() !== \"li\") {\n        li = li.parentNode;\n        if (!li || li === tribute.menu) {\n          throw new Error(\"cannot find the <li> container for the click\");\n        }\n      }\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\n      tribute.hideMenu();\n\n      // TODO: should fire with externalTrigger and target is outside of menu\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\n      tribute.current.externalTrigger = false;\n      setTimeout(() => tribute.hideMenu());\n    }\n  }\n\n  keyup(instance, event) {\n    if (instance.inputEvent) {\n      instance.inputEvent = false;\n    }\n    instance.updateSelection(this);\n\n    if (!event.keyCode || event.keyCode === 27) return;\n\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\n      instance.tribute.hasTrailingSpace = false;\n      instance.commandEvent = true;\n      instance.callbacks()[\"space\"](event, this);\n      return;\n    }\n\n    if (!instance.tribute.isActive) {\n      if (instance.tribute.autocompleteMode) {\n        instance.callbacks().triggerChar(event, this, \"\");\n      } else {\n        let keyCode = instance.getKeyCode(instance, this, event);\n\n        if (isNaN(keyCode) || !keyCode) return;\n\n        let trigger = instance.tribute.triggers().find(trigger => {\n          return trigger.charCodeAt(0) === keyCode;\n        });\n\n        if (typeof trigger !== \"undefined\") {\n          instance.callbacks().triggerChar(event, this, trigger);\n        }\n      }\n    }\n\n    if (\n      instance.tribute.current.mentionText.length <\n      instance.tribute.current.collection.menuShowMinLength\n    ) {\n      return;\n    }\n\n    if (\n      ((instance.tribute.current.trigger ||\n        instance.tribute.autocompleteMode) &&\n        instance.commandEvent === false) ||\n      (instance.tribute.isActive && event.keyCode === 8)\n    ) {\n      instance.tribute.showMenuFor(this, true);\n    }\n  }\n\n  shouldDeactivate(event) {\n    if (!this.tribute.isActive) return false;\n\n    if (this.tribute.current.mentionText.length === 0) {\n      let eventKeyPressed = false;\n      TributeEvents.keys().forEach(o => {\n        if (event.keyCode === o.key) eventKeyPressed = true;\n      });\n\n      return !eventKeyPressed;\n    }\n\n    return false;\n  }\n\n  getKeyCode(instance, el, event) {\n    let char;\n    let tribute = instance.tribute;\n    let info = tribute.range.getTriggerInfo(\n      false,\n      tribute.hasTrailingSpace,\n      true,\n      tribute.allowSpaces,\n      tribute.autocompleteMode\n    );\n\n    if (info) {\n      return info.mentionTriggerChar.charCodeAt(0);\n    } else {\n      return false;\n    }\n  }\n\n  updateSelection(el) {\n    this.tribute.current.element = el;\n    let info = this.tribute.range.getTriggerInfo(\n      false,\n      this.tribute.hasTrailingSpace,\n      true,\n      this.tribute.allowSpaces,\n      this.tribute.autocompleteMode\n    );\n\n    if (info) {\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\n      this.tribute.current.mentionText = info.mentionText;\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\n    }\n  }\n\n  callbacks() {\n    return {\n      triggerChar: (e, el, trigger) => {\n        let tribute = this.tribute;\n        tribute.current.trigger = trigger;\n\n        let collectionItem = tribute.collection.find(item => {\n          return item.trigger === trigger;\n        });\n\n        tribute.current.collection = collectionItem;\n\n        if (\n          tribute.current.mentionText.length >=\n            tribute.current.collection.menuShowMinLength &&\n          tribute.inputEvent\n        ) {\n          tribute.showMenuFor(el, true);\n        }\n      },\n      enter: (e, el) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          setTimeout(() => {\n            this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\n            this.tribute.hideMenu();\n          }, 0);\n        }\n      },\n      escape: (e, el) => {\n        if (this.tribute.isActive) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.isActive = false;\n          this.tribute.hideMenu();\n        }\n      },\n      tab: (e, el) => {\n        // choose first match\n        this.callbacks().enter(e, el);\n      },\n      space: (e, el) => {\n        if (this.tribute.isActive) {\n          if (this.tribute.spaceSelectsMatch) {\n            this.callbacks().enter(e, el);\n          } else if (!this.tribute.allowSpaces) {\n            e.stopPropagation();\n            setTimeout(() => {\n              this.tribute.hideMenu();\n              this.tribute.isActive = false;\n            }, 0);\n          }\n        }\n      },\n      up: (e, el) => {\n        // navigate up ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected && selected > 0) {\n            this.tribute.menuSelected--;\n            this.setActiveLi();\n          } else if (selected === 0) {\n            this.tribute.menuSelected = count - 1;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\n          }\n        }\n      },\n      down: (e, el) => {\n        // navigate down ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length - 1,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected) {\n            this.tribute.menuSelected++;\n            this.setActiveLi();\n          } else if (count === selected) {\n            this.tribute.menuSelected = 0;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = 0;\n          }\n        }\n      },\n      delete: (e, el) => {\n        if (\n          this.tribute.isActive &&\n          this.tribute.current.mentionText.length < 1\n        ) {\n          this.tribute.hideMenu();\n        } else if (this.tribute.isActive) {\n          this.tribute.showMenuFor(el);\n        }\n      }\n    };\n  }\n\n  setActiveLi(index) {\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\n      length = lis.length >>> 0;\n\n    if (index) this.tribute.menuSelected = parseInt(index);\n\n    for (let i = 0; i < length; i++) {\n      let li = lis[i];\n      if (i === this.tribute.menuSelected) {\n        li.classList.add(this.tribute.current.collection.selectClass);\n\n        let liClientRect = li.getBoundingClientRect();\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n        if (liClientRect.bottom > menuClientRect.bottom) {\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n          this.tribute.menu.scrollTop += scrollDistance;\n        } else if (liClientRect.top < menuClientRect.top) {\n          let scrollDistance = menuClientRect.top - liClientRect.top;\n          this.tribute.menu.scrollTop -= scrollDistance;\n        }\n      } else {\n        li.classList.remove(this.tribute.current.collection.selectClass);\n      }\n    }\n  }\n\n  getFullHeight(elem, includeMargin) {\n    let height = elem.getBoundingClientRect().height;\n\n    if (includeMargin) {\n      let style = elem.currentStyle || window.getComputedStyle(elem);\n      return (\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\n      );\n    }\n\n    return height;\n  }\n}\n\nexport default TributeEvents;\n","class TributeMenuEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  bind(menu) {\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\n    this.menuContainerScrollEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.hideMenu();\n        }\n      },\n      10,\n      false\n    );\n    this.windowResizeEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.hideMenu();\n        }\n      },\n      10,\n      false\n    );\n\n    // fixes IE11 issues with mousedown\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.addEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.addEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  unbind(menu) {\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.removeEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  debounce(func, wait, immediate) {\n    var timeout;\n    return () => {\n      var context = this,\n        args = arguments;\n      var later = () => {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n}\n\nexport default TributeMenuEvents;\n","// Thanks to https://github.com/jeff-collins/ment.io\nimport \"./utils\";\n\nclass TributeRange {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.range = this\n    }\n\n    getDocument() {\n        let iframe\n        if (this.tribute.current.collection) {\n            iframe = this.tribute.current.collection.iframe\n        }\n\n        if (!iframe) {\n            return document\n        }\n\n        return iframe.contentWindow.document\n    }\n\n    positionMenuAtCaret(scrollTo) {\n        let context = this.tribute.current,\n            coordinates\n\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (typeof info !== 'undefined') {\n\n            if(!this.tribute.positionMenu){\n                this.tribute.menu.style.cssText = `display: block;`\n                return\n            }\n\n            if (!this.isContentEditable(context.element)) {\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\n                    info.mentionPosition)\n            }\n            else {\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition)\n            }\n\n            this.tribute.menu.style.cssText = `top: ${coordinates.top}px;\n                                     left: ${coordinates.left}px;\n                                     right: ${coordinates.right}px;\n                                     bottom: ${coordinates.bottom}px;\n                                     max-height: ${coordinates.maxHeight || 500}px;\n                                     max-width: ${coordinates.maxWidth || 300}px;\n                                     position: ${coordinates.position || 'absolute'};\n                                     display: block;`\n\n            if (coordinates.left === 'auto') {\n                this.tribute.menu.style.left = 'auto'\n            }\n\n            if (coordinates.top === 'auto') {\n                this.tribute.menu.style.top = 'auto'\n            }\n\n            if (scrollTo) this.scrollIntoView()\n\n        } else {\n            this.tribute.menu.style.cssText = 'display: none'\n        }\n    }\n\n    get menuContainerIsBody() {\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\n    }\n\n\n    selectElement(targetElement, path, offset) {\n        let range\n        let elem = targetElement\n\n        if (path) {\n            for (var i = 0; i < path.length; i++) {\n                elem = elem.childNodes[path[i]]\n                if (elem === undefined) {\n                    return\n                }\n                while (elem.length < offset) {\n                    offset -= elem.length\n                    elem = elem.nextSibling\n                }\n                if (elem.childNodes.length === 0 && !elem.length) {\n                    elem = elem.previousSibling\n                }\n            }\n        }\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(elem, offset)\n        range.setEnd(elem, offset)\n        range.collapse(true)\n\n        try {\n            sel.removeAllRanges()\n        } catch (error) {}\n\n        sel.addRange(range)\n        targetElement.focus()\n    }\n\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\n        let info = this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (info !== undefined) {\n            let context = this.tribute.current\n            let replaceEvent = new CustomEvent('tribute-replaced', {\n                detail: {\n                    item: item,\n                    instance: context,\n                    context: info,\n                    event: originalEvent,\n                }\n            })\n\n            if (!this.isContentEditable(context.element)) {\n                let myField = this.tribute.current.element\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : ' '\n                text += textSuffix\n                let startPos = info.mentionPosition\n                let endPos = info.mentionPosition + info.mentionText.length + (textSuffix === '' ? 1 : textSuffix.length)\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length - 1\n                }\n                myField.value = myField.value.substring(0, startPos) + text +\n                    myField.value.substring(endPos, myField.value.length)\n                myField.selectionStart = startPos + text.length\n                myField.selectionEnd = startPos + text.length\n            } else {\n                // add a space to the end of the pasted text\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : '\\xA0'\n                if(text instanceof HTMLElement) {\n                    // skip adding suffix yet - TODO later\n                    // text.appendChild(this.getDocument().createTextNode(textSuffix))\n                } else {\n                    text += textSuffix\n                }\n                let endPos = info.mentionPosition + info.mentionText.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length\n                }\n                this.pasteHtml(text, info.mentionPosition, endPos)\n            }\n\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\n            context.element.dispatchEvent(replaceEvent)\n        }\n    }\n\n    pasteHtml(htmlOrElem, startPos, endPos) {\n        let range, sel\n        sel = this.getWindowSelection()\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, startPos)\n        range.setEnd(sel.anchorNode, endPos)\n        range.deleteContents()\n\n        let el = this.getDocument().createElement('div')\n        if(htmlOrElem instanceof HTMLElement) {\n            el.appendChild(htmlOrElem)\n        } else {\n            el.innerHTML = htmlOrElem\n        }\n        let frag = this.getDocument().createDocumentFragment(),\n            node, lastNode\n        while ((node = el.firstChild)) {\n            lastNode = frag.appendChild(node)\n        }\n        range.insertNode(frag)\n\n        // Preserve the selection\n        if (lastNode) {\n            range = range.cloneRange()\n            range.setStartAfter(lastNode)\n            range.collapse(true)\n            sel.removeAllRanges()\n            sel.addRange(range)\n        }\n    }\n\n    getWindowSelection() {\n        if (this.tribute.collection.iframe) {\n            return this.tribute.collection.iframe.contentWindow.getSelection()\n        }\n\n        return window.getSelection()\n    }\n\n    getNodePositionInParent(element) {\n        if (element.parentNode === null) {\n            return 0\n        }\n\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\n            let node = element.parentNode.childNodes[i]\n\n            if (node === element) {\n                return i\n            }\n        }\n    }\n\n    getContentEditableSelectedPath(ctx) {\n        let sel = this.getWindowSelection()\n        let selected = sel.anchorNode\n        let path = []\n        let offset\n\n        if (selected != null) {\n            let i\n            let ce = selected.contentEditable\n            while (selected !== null && ce !== 'true') {\n                i = this.getNodePositionInParent(selected)\n                path.push(i)\n                selected = selected.parentNode\n                if (selected !== null) {\n                    ce = selected.contentEditable\n                }\n            }\n            path.reverse()\n\n            // getRangeAt may not exist, need alternative\n            offset = sel.getRangeAt(0).startOffset\n\n            return {\n                selected: selected,\n                path: path,\n                offset: offset\n            }\n        }\n    }\n\n    getTextPrecedingCurrentSelection() {\n        let context = this.tribute.current,\n            text = ''\n\n        if (!this.isContentEditable(context.element)) {\n            let textComponent = this.tribute.current.element;\n            if (textComponent) {\n                let startPos = textComponent.selectionStart\n                if (textComponent.value && startPos >= 0) {\n                    text = textComponent.value.substring(0, startPos)\n                }\n            }\n\n        } else {\n            let selectedElem = this.getWindowSelection().anchorNode\n\n            if (selectedElem != null) {\n                let workingNodeContent = selectedElem.textContent\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\n\n                if (workingNodeContent && selectStartOffset >= 0) {\n                    text = workingNodeContent.substring(0, selectStartOffset)\n                }\n            }\n        }\n\n        return text\n    }\n\n    getLastWordInText(text) {\n        var wordsArray;\n        if (this.tribute.autocompleteSeparator) {\n            wordsArray = text.split(this.tribute.autocompleteSeparator);\n        } else {\n            wordsArray = text.split(/\\s+/);\n        }\n        var wordsCount = wordsArray.length - 1;\n        return wordsArray[wordsCount];\n    }\n\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\n        let ctx = this.tribute.current\n        let selected, path, offset\n\n        if (!this.isContentEditable(ctx.element)) {\n            selected = this.tribute.current.element\n        } else {\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\n\n            if (selectionInfo) {\n                selected = selectionInfo.selected\n                path = selectionInfo.path\n                offset = selectionInfo.offset\n            }\n        }\n\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\n\n        if (isAutocomplete) {\n            return {\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\n                mentionText: lastWordOfEffectiveRange,\n                mentionSelectedElement: selected,\n                mentionSelectedPath: path,\n                mentionSelectedOffset: offset\n            }\n        }\n\n        if (effectiveRange !== undefined && effectiveRange !== null) {\n            let mostRecentTriggerCharPos = -1\n            let triggerChar\n\n            this.tribute.collection.forEach(config => {\n                let c = config.trigger\n                let idx = config.requireLeadingSpace ?\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\n                    effectiveRange.lastIndexOf(c)\n\n                if (idx > mostRecentTriggerCharPos) {\n                    mostRecentTriggerCharPos = idx\n                    triggerChar = c\n                    requireLeadingSpace = config.requireLeadingSpace\n                }\n            })\n\n            if (mostRecentTriggerCharPos >= 0 &&\n                (\n                    mostRecentTriggerCharPos === 0 ||\n                    !requireLeadingSpace ||\n                    /\\s/.test(\n                        effectiveRange.substring(\n                            mostRecentTriggerCharPos - 1,\n                            mostRecentTriggerCharPos)\n                    )\n                )\n            ) {\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\n                    effectiveRange.length)\n\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\n                    (\n                        firstSnippetChar === ' ' ||\n                        firstSnippetChar === '\\xA0'\n                    )\n                if (hasTrailingSpace) {\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\n                }\n\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\n\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\n\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\n                    return {\n                        mentionPosition: mostRecentTriggerCharPos,\n                        mentionText: currentTriggerSnippet,\n                        mentionSelectedElement: selected,\n                        mentionSelectedPath: path,\n                        mentionSelectedOffset: offset,\n                        mentionTriggerChar: triggerChar\n                    }\n                }\n            }\n        }\n    }\n\n    lastIndexWithLeadingSpace (str, trigger) {\n        let reversedStr = str.split('').reverse().join('')\n        let index = -1\n\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\n            let firstChar = cidx === str.length - 1\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\n\n            let match = true\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\n                match = false\n                break\n              }\n            }\n\n            if (match && (firstChar || leadingSpace)) {\n                index = str.length - 1 - cidx\n                break\n            }\n        }\n\n        return index\n    }\n\n    isContentEditable(element) {\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\n    }\n\n    isMenuOffScreen(coordinates, menuDimensions) {\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : windowTop + windowHeight - coordinates.bottom - menuDimensions.height\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : windowLeft + windowWidth - coordinates.right - menuDimensions.width\n\n        return {\n            top: menuTop < Math.floor(windowTop),\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n            left: menuLeft < Math.floor(windowLeft)\n        }\n    }\n\n    getMenuDimensions() {\n        // Width of the menu depends of its contents and position\n        // We must check what its width would be without any obstruction\n        // This way, we can achieve good positioning for flipping the menu\n        let dimensions = {\n            width: null,\n            height: null\n        }\n\n        this.tribute.menu.style.cssText = `top: 0px;\n                                 left: 0px;\n                                 position: fixed;\n                                 display: block;\n                                 visibility; hidden;\n                                 max-height:500px;`\n       dimensions.width = this.tribute.menu.offsetWidth\n       dimensions.height = this.tribute.menu.offsetHeight\n\n       this.tribute.menu.style.cssText = `display: none;`\n\n       return dimensions\n    }\n\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\n            'borderBottomWidth', 'borderLeftWidth', 'borderStyle', 'paddingTop',\n            'paddingRight', 'paddingBottom', 'paddingLeft',\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\n            'textAlign', 'textTransform', 'textIndent',\n            'textDecoration', 'letterSpacing', 'wordSpacing'\n        ]\n\n        let isFirefox = (window.mozInnerScreenX !== null)\n\n        let div = this.getDocument().createElement('div')\n        div.id = 'input-textarea-caret-position-mirror-div'\n        this.getDocument().body.appendChild(div)\n\n        let style = div.style\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n\n        style.whiteSpace = 'pre-wrap'\n        if (element.nodeName !== 'INPUT') {\n            style.wordWrap = 'break-word'\n        }\n\n        style.position = 'absolute'\n        style.visibility = 'hidden'\n\n        // transfer the element's properties to the div\n        properties.forEach(prop => {\n            style[prop] = computed[prop]\n        })\n\n        //NOT SURE WHY THIS IS HERE AND IT DOESNT SEEM HELPFUL\n        // if (isFirefox) {\n        //     style.width = `${(parseInt(computed.width) - 2)}px`\n        //     if (element.scrollHeight > parseInt(computed.height))\n        //         style.overflowY = 'scroll'\n        // } else {\n        //     style.overflow = 'hidden'\n        // }\n\n        let span0 = document.createElement('span')\n        span0.textContent =  element.value.substring(0, position)\n        div.appendChild(span0)\n\n        if (element.nodeName === 'INPUT') {\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\n        }\n\n        //Create a span in the div that represents where the cursor\n        //should be\n        let span = this.getDocument().createElement('span')\n        //we give it no content as this represents the cursor\n        span.textContent = '&#x200B;'\n        div.appendChild(span)\n\n        let span2 = this.getDocument().createElement('span');\n        span2.textContent = element.value.substring(position);\n        div.appendChild(span2);\n\n        let rect = element.getBoundingClientRect()\n\n        //position the div exactly over the element\n        //so we can get the bounding client rect for the span and\n        //it should represent exactly where the cursor is\n        div.style.position = 'fixed';\n        div.style.left = rect.left + 'px';\n        div.style.top = rect.top + 'px';\n        div.style.width = rect.width + 'px';\n        div.style.height = rect.height + 'px';\n        div.scrollTop = element.scrollTop;\n\n        var spanRect = span.getBoundingClientRect();\n        this.getDocument().body.removeChild(div)\n        return this.getFixedCoordinatesRelativeToRect(spanRect);\n    }\n\n    getContentEditableCaretPosition(selectedNodePosition) {\n        let range\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, selectedNodePosition)\n        range.setEnd(sel.anchorNode, selectedNodePosition)\n\n        range.collapse(false)\n\n        let rect = range.getBoundingClientRect()\n\n        return this.getFixedCoordinatesRelativeToRect(rect);\n    }\n\n    getFixedCoordinatesRelativeToRect(rect) {\n        let coordinates = {\n            position: 'fixed',\n            left: rect.left,\n            top: rect.top + rect.height\n        }\n\n        let menuDimensions = this.getMenuDimensions()\n\n        var availableSpaceOnTop = rect.top;\n        var availableSpaceOnBottom = window.innerHeight - (rect.top + rect.height);\n\n        //check to see where's the right place to put the menu vertically\n        if (availableSpaceOnBottom < menuDimensions.height) {\n          if (availableSpaceOnTop >= menuDimensions.height || availableSpaceOnTop > availableSpaceOnBottom) {\n            coordinates.top = 'auto';\n            coordinates.bottom = window.innerHeight - rect.top;\n            if (availableSpaceOnBottom < menuDimensions.height) {\n              coordinates.maxHeight = availableSpaceOnTop;\n            }\n          } else {\n            if (availableSpaceOnTop < menuDimensions.height) {\n              coordinates.maxHeight = availableSpaceOnBottom;\n            }\n          }\n        }\n\n        var availableSpaceOnLeft = rect.left;\n        var availableSpaceOnRight = window.innerWidth - rect.left;\n\n        //check to see where's the right place to put the menu horizontally\n        if (availableSpaceOnRight < menuDimensions.width) {\n          if (availableSpaceOnLeft >= menuDimensions.width || availableSpaceOnLeft > availableSpaceOnRight) {\n            coordinates.left = 'auto';\n            coordinates.right = window.innerWidth - rect.left;\n            if (availableSpaceOnRight < menuDimensions.width) {\n              coordinates.maxWidth = availableSpaceOnLeft;\n            }\n          } else {\n            if (availableSpaceOnLeft < menuDimensions.width) {\n              coordinates.maxWidth = availableSpaceOnRight;\n            }\n          }\n        }\n\n        return coordinates\n    }\n\n    scrollIntoView(elem) {\n        let reasonableBuffer = 20,\n            clientRect\n        let maxScrollDisplacement = 100\n        let e = this.menu\n\n        if (typeof e === 'undefined') return;\n\n        while (clientRect === undefined || clientRect.height === 0) {\n            clientRect = e.getBoundingClientRect()\n\n            if (clientRect.height === 0) {\n                e = e.childNodes[0]\n                if (e === undefined || !e.getBoundingClientRect) {\n                    return\n                }\n            }\n        }\n\n        let elemTop = clientRect.top\n        let elemBottom = elemTop + clientRect.height\n\n        if (elemTop < 0) {\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\n        } else if (elemBottom > window.innerHeight) {\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\n\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\n                maxY = window.pageYOffset + maxScrollDisplacement\n            }\n\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\n\n            if (targetY > maxY) {\n                targetY = maxY\n            }\n\n            window.scrollTo(0, targetY)\n        }\n    }\n}\n\n\nexport default TributeRange;\n","// Thanks to https://github.com/mattyork/fuzzy\nclass TributeSearch {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.search = this\n    }\n\n    simpleFilter(pattern, array) {\n        return array.filter(string => {\n            return this.test(pattern, string)\n        })\n    }\n\n    test(pattern, string) {\n        return this.match(pattern, string) !== null\n    }\n\n    match(pattern, string, opts) {\n        opts = opts || {}\n        let patternIdx = 0,\n            result = [],\n            len = string.length,\n            totalScore = 0,\n            currScore = 0,\n            pre = opts.pre || '',\n            post = opts.post || '',\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\n            ch, compareChar\n\n        if (opts.skip) {\n            return {rendered: string, score: 0}\n        }\n\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\n\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\n        if (!patternCache) {\n            return null\n        }\n        return {\n            rendered: this.render(string, patternCache.cache, pre, post),\n            score: patternCache.score\n        }\n    }\n\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n        if (this.tribute.autocompleteSeparator) {\n            // if the pattern search at end\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\n        }\n\n        if (pattern.length === patternIndex) {\n\n            // calculate score and copy the cache containing the indices where it's found\n            return {\n                score: this.calculateScore(patternCache),\n                cache: patternCache.slice()\n            }\n        }\n\n        // if string at end or remaining pattern > remaining string\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\n            return undefined\n        }\n\n        let c = pattern[patternIndex]\n        let index = string.indexOf(c, stringIndex)\n        let best, temp\n\n        while (index > -1) {\n            patternCache.push(index)\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\n            patternCache.pop()\n\n            // if downstream traversal failed, return best answer so far\n            if (!temp) {\n                return best\n            }\n\n            if (!best || best.score < temp.score) {\n                best = temp\n            }\n\n            index = string.indexOf(c, index + 1)\n        }\n\n        return best\n    }\n\n    calculateScore(patternCache) {\n        let score = 0\n        let temp = 1\n\n        patternCache.forEach((index, i) => {\n            if (i > 0) {\n                if (patternCache[i - 1] + 1 === index) {\n                    temp += temp + 1\n                }\n                else {\n                    temp = 1\n                }\n            }\n\n            score += temp\n        })\n\n        return score\n    }\n\n    render(string, indices, pre, post) {\n        var rendered = string.substring(0, indices[0])\n\n        indices.forEach((index, i) => {\n            rendered += pre + string[index] + post +\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\n        })\n\n        return rendered\n    }\n\n    filter(pattern, arr, opts) {\n        opts = opts || {}\n        return arr\n            .reduce((prev, element, idx, arr) => {\n                let str = element\n\n                if (opts.extract) {\n                    str = opts.extract(element)\n\n                    if (!str) { // take care of undefineds / nulls / etc.\n                        str = ''\n                    }\n                }\n\n                let rendered = this.match(pattern, str, opts)\n\n                if (rendered != null) {\n                    prev[prev.length] = {\n                        string: rendered.rendered,\n                        score: rendered.score,\n                        index: idx,\n                        original: element\n                    }\n                }\n\n                return prev\n            }, [])\n\n        .sort((a, b) => {\n            let compare = b.score - a.score\n            if (compare) return compare\n            return a.index - b.index\n        })\n    }\n}\n\nexport default TributeSearch;\n","import \"./utils\";\nimport TributeEvents from \"./TributeEvents\";\nimport TributeMenuEvents from \"./TributeMenuEvents\";\nimport TributeRange from \"./TributeRange\";\nimport TributeSearch from \"./TributeSearch\";\n\nclass Tribute {\n  constructor({\n    values = null,\n    loadingItemTemplate = null,\n    iframe = null,\n    selectClass = \"highlight\",\n    containerClass = \"tribute-container\",\n    itemClass = \"\",\n    trigger = \"@\",\n    autocompleteMode = false,\n    autocompleteSeparator = null,\n    selectTemplate = null,\n    menuItemTemplate = null,\n    lookup = \"key\",\n    fillAttr = \"value\",\n    collection = null,\n    menuContainer = null,\n    noMatchTemplate = null,\n    requireLeadingSpace = true,\n    allowSpaces = false,\n    replaceTextSuffix = null,\n    positionMenu = true,\n    spaceSelectsMatch = false,\n    searchOpts = {},\n    menuItemLimit = null,\n    menuShowMinLength = 0\n  }) {\n    this.autocompleteMode = autocompleteMode;\n    this.autocompleteSeparator = autocompleteSeparator;\n    this.menuSelected = 0;\n    this.current = {};\n    this.inputEvent = false;\n    this.isActive = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.hasTrailingSpace = false;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n\n    if (this.autocompleteMode) {\n      trigger = \"\";\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [\n        {\n          // symbol that starts the lookup\n          trigger: trigger,\n\n          // is it wrapped in an iframe\n          iframe: iframe,\n\n          // class applied to selected item\n          selectClass: selectClass,\n\n          // class applied to the Container\n          containerClass: containerClass,\n\n          // class applied to each item\n          itemClass: itemClass,\n\n          // function called on select that retuns the content to insert\n          selectTemplate: (\n            selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n\n          // function called that returns content for an item\n          menuItemTemplate: (\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n\n          // column to search against in the object\n          lookup: lookup,\n\n          // column that contains the content to insert by default\n          fillAttr: fillAttr,\n\n          // array of objects or a function returning an array of objects\n          values: values,\n\n          // useful for when values is an async function\n          loadingItemTemplate: loadingItemTemplate,\n\n          requireLeadingSpace: requireLeadingSpace,\n\n          searchOpts: searchOpts,\n\n          menuItemLimit: menuItemLimit,\n\n          menuShowMinLength: menuShowMinLength\n        }\n      ];\n    } else if (collection) {\n      if (this.autocompleteMode)\n        console.warn(\n          \"Tribute in autocomplete mode does not work for collections\"\n        );\n      this.collection = collection.map(item => {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          containerClass: item.containerClass || containerClass,\n          itemClass: item.itemClass || itemClass,\n          selectTemplate: (\n            item.selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n          menuItemTemplate: (\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          loadingItemTemplate: item.loadingItemTemplate,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\n        };\n      });\n    } else {\n      throw new Error(\"[Tribute] No collection specified.\");\n    }\n\n    new TributeRange(this);\n    new TributeEvents(this);\n    new TributeMenuEvents(this);\n    new TributeSearch(this);\n  }\n\n  get isActive() {\n    return this._isActive;\n  }\n\n  set isActive(val) {\n    if (this._isActive != val) {\n      this._isActive = val;\n      if (this.current.element) {\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\n        this.current.element.dispatchEvent(noMatchEvent);\n      }\n    }\n  }\n\n  static defaultSelectTemplate(item) {\n    if (typeof item === \"undefined\")\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\n    if (this.range.isContentEditable(this.current.element)) {\n      return (\n        '<span class=\"tribute-mention\">' +\n        (this.current.collection.trigger +\n          item.original[this.current.collection.fillAttr]) +\n        \"</span>\"\n      );\n    }\n\n    return (\n      this.current.collection.trigger +\n      item.original[this.current.collection.fillAttr]\n    );\n  }\n\n  static defaultMenuItemTemplate(matchItem) {\n    return matchItem.string;\n  }\n\n  static inputTypes() {\n    return [\"TEXTAREA\", \"INPUT\"];\n  }\n\n  triggers() {\n    return this.collection.map(config => {\n      return config.trigger;\n    });\n  }\n\n  attach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._attach(el[i]);\n      }\n    } else {\n      this._attach(el);\n    }\n  }\n\n  _attach(el) {\n    if (el.hasAttribute(\"data-tribute\")) {\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\n    }\n\n    this.ensureEditable(el);\n    this.events.bind(el);\n    el.setAttribute(\"data-tribute\", true);\n  }\n\n  ensureEditable(element) {\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n      if (!element.contentEditable) {\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName + \", not contentEditable\");\n      }\n    }\n  }\n\n  createMenu(containerClass) {\n    let wrapper = this.range.getDocument().createElement(\"div\"),\n      ul = this.range.getDocument().createElement(\"ul\");\n    wrapper.className = containerClass;\n    wrapper.appendChild(ul);\n\n    if (this.menuContainer) {\n      return this.menuContainer.appendChild(wrapper);\n    }\n\n    return this.range.getDocument().body.appendChild(wrapper);\n  }\n\n  showMenuFor(element, scrollTo) {\n    // Only proceed if menu isn't already shown for the current element & mentionText\n    if (\n      this.isActive &&\n      this.current.element === element &&\n      this.current.mentionText === this.currentMentionTextSnapshot\n    ) {\n      return;\n    }\n    this.currentMentionTextSnapshot = this.current.mentionText;\n\n    // create the menu if it doesn't exist.\n    if (!this.menu) {\n      this.menu = this.createMenu(this.current.collection.containerClass);\n      element.tributeMenu = this.menu;\n      this.menuEvents.bind(this.menu);\n    }\n\n    this.isActive = true;\n    this.menuSelected = 0;\n\n    if (!this.current.mentionText) {\n      this.current.mentionText = \"\";\n    }\n\n    const processValues = values => {\n      // Tribute may not be active any more by the time the value callback returns\n      if (!this.isActive) {\n        return;\n      }\n\n      let items = this.search.filter(this.current.mentionText, values, {\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\n        post: this.current.collection.searchOpts.post || \"</span>\",\n        skip: this.current.collection.searchOpts.skip,\n        extract: el => {\n          if (typeof this.current.collection.lookup === \"string\") {\n            return el[this.current.collection.lookup];\n          } else if (typeof this.current.collection.lookup === \"function\") {\n            return this.current.collection.lookup(el, this.current.mentionText);\n          } else {\n            throw new Error(\n              \"Invalid lookup attribute, lookup must be string or function.\"\n            );\n          }\n        }\n      });\n\n      if (this.current.collection.menuItemLimit) {\n        items = items.slice(0, this.current.collection.menuItemLimit);\n      }\n\n      this.current.filteredItems = items;\n\n      let ul = this.menu.querySelector(\"ul\");\n\n      if (!items.length) {\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\n          detail: this.menu\n        });\n        this.current.element.dispatchEvent(noMatchEvent);\n        if (\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\n            !this.current.collection.noMatchTemplate()) ||\n          !this.current.collection.noMatchTemplate\n        ) {\n          this.hideMenu();\n        } else {\n          typeof this.current.collection.noMatchTemplate === \"function\"\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\n            this.range.positionMenuAtCaret(scrollTo);\n        }\n\n        return;\n      }\n\n      ul.innerHTML = \"\";\n      let fragment = this.range.getDocument().createDocumentFragment();\n\n      items.forEach((item, index) => {\n        let li = this.range.getDocument().createElement(\"li\");\n        li.setAttribute(\"data-index\", index);\n        li.className = this.current.collection.itemClass;\n        li.addEventListener(\"mousemove\", e => {\n          let [li, index] = this._findLiTarget(e.target);\n          if (e.movementY !== 0) {\n            this.events.setActiveLi(index);\n          }\n        });\n        if (this.menuSelected === index) {\n          li.classList.add(this.current.collection.selectClass);\n        }\n        // remove all content in the li and append the content of menuItemTemplate\n        const menuItemDomOrString = this.current.collection.menuItemTemplate(item);\n        if (menuItemDomOrString instanceof Element) {\n          li.innerHTML = \"\";\n          li.appendChild(menuItemDomOrString);\n        } else {\n          li.innerHTML = menuItemDomOrString;\n        }\n        fragment.appendChild(li);\n      });\n      ul.appendChild(fragment);\n\n      this.range.positionMenuAtCaret(scrollTo);\n    };\n\n    if (typeof this.current.collection.values === \"function\") {\n      if (this.current.collection.loadingItemTemplate) {\n        this.menu.querySelector(\"ul\").innerHTML = this.current.collection.loadingItemTemplate;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n\n      this.current.collection.values(this.current.mentionText, processValues);\n    } else {\n      processValues(this.current.collection.values);\n    }\n  }\n\n  _findLiTarget(el) {\n    if (!el) return [];\n    const index = el.getAttribute(\"data-index\");\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\n  }\n\n  showMenuForCollection(element, collectionIndex) {\n    if (element !== document.activeElement) {\n      this.placeCaretAtEnd(element);\n    }\n\n    this.current.collection = this.collection[collectionIndex || 0];\n    this.current.externalTrigger = true;\n    this.current.element = element;\n\n    if (element.isContentEditable)\n      this.insertTextAtCursor(this.current.collection.trigger);\n    else this.insertAtCaret(element, this.current.collection.trigger);\n\n    this.showMenuFor(element);\n  }\n\n  // TODO: make sure this works for inputs/textareas\n  placeCaretAtEnd(el) {\n    el.focus();\n    if (\n      typeof window.getSelection != \"undefined\" &&\n      typeof document.createRange != \"undefined\"\n    ) {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n    }\n  }\n\n  // for contenteditable\n  insertTextAtCursor(text) {\n    var sel, range, html;\n    sel = window.getSelection();\n    range = sel.getRangeAt(0);\n    range.deleteContents();\n    var textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.selectNodeContents(textNode);\n    range.collapse(false);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  // for regular inputs\n  insertAtCaret(textarea, text) {\n    var scrollPos = textarea.scrollTop;\n    var caretPos = textarea.selectionStart;\n\n    var front = textarea.value.substring(0, caretPos);\n    var back = textarea.value.substring(\n      textarea.selectionEnd,\n      textarea.value.length\n    );\n    textarea.value = front + text + back;\n    caretPos = caretPos + text.length;\n    textarea.selectionStart = caretPos;\n    textarea.selectionEnd = caretPos;\n    textarea.focus();\n    textarea.scrollTop = scrollPos;\n  }\n\n  hideMenu() {\n    if (this.menu) {\n      this.menu.style.cssText = \"display: none;\";\n      this.isActive = false;\n      this.menuSelected = 0;\n      this.current = {};\n    }\n  }\n\n  selectItemAtIndex(index, originalEvent) {\n    index = parseInt(index);\n    if (typeof index !== \"number\" || isNaN(index)) return;\n    let item = this.current.filteredItems[index];\n    let content = this.current.collection.selectTemplate(item);\n    if (content !== null) this.replaceText(content, originalEvent, item);\n  }\n\n  replaceText(content, originalEvent, item) {\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\n  }\n\n  _append(collection, newValues, replace) {\n    if (typeof collection.values === \"function\") {\n      throw new Error(\"Unable to append to values, as it is a function.\");\n    } else if (!replace) {\n      collection.values = collection.values.concat(newValues);\n    } else {\n      collection.values = newValues;\n    }\n  }\n\n  append(collectionIndex, newValues, replace) {\n    let index = parseInt(collectionIndex);\n    if (typeof index !== \"number\")\n      throw new Error(\"please provide an index for the collection to update.\");\n\n    let collection = this.collection[index];\n\n    this._append(collection, newValues, replace);\n  }\n\n  appendCurrent(newValues, replace) {\n    if (this.isActive) {\n      this._append(this.current.collection, newValues, replace);\n    } else {\n      throw new Error(\n        \"No active state. Please use append instead and pass an index.\"\n      );\n    }\n  }\n\n  detach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._detach(el[i]);\n      }\n    } else {\n      this._detach(el);\n    }\n  }\n\n  _detach(el) {\n    this.events.unbind(el);\n    if (el.tributeMenu) {\n      this.menuEvents.unbind(el.tributeMenu);\n    }\n\n    setTimeout(() => {\n      el.removeAttribute(\"data-tribute\");\n      this.isActive = false;\n      if (el.tributeMenu) {\n        el.tributeMenu.remove();\n      }\n    });\n  }\n}\n\nexport default Tribute;\n"],"names":["Array","prototype","find","Object","defineProperty","value","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","element","boundKeydown","keydown","bind","boundKeyup","keyup","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","isActive","hideMenu","commandEvent","keys","forEach","key","keyCode","callbacks","toLowerCase","inputEvent","menu","contains","target","li","preventDefault","stopPropagation","nodeName","parentNode","Error","selectItemAtIndex","getAttribute","current","externalTrigger","setTimeout","updateSelection","allowSpaces","hasTrailingSpace","autocompleteMode","triggerChar","getKeyCode","isNaN","trigger","triggers","charCodeAt","mentionText","collection","menuShowMinLength","showMenuFor","eventKeyPressed","el","info","range","getTriggerInfo","mentionTriggerChar","selectedPath","mentionSelectedPath","selectedOffset","mentionSelectedOffset","e","_this","collectionItem","item","enter","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","index","lis","querySelectorAll","parseInt","i","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","getDocument","menuContainer","func","wait","immediate","timeout","context","_this2","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","cssText","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","maxHeight","maxWidth","position","scrollIntoView","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","textSuffix","replaceTextSuffix","HTMLElement","endPos","pasteHtml","myField","startPos","substring","selectionStart","selectionEnd","dispatchEvent","htmlOrElem","anchorNode","deleteContents","createElement","appendChild","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","getSelection","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","selectedElem","workingNodeContent","textContent","selectStartOffset","textComponent","wordsArray","autocompleteSeparator","split","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","mostRecentTriggerCharPos","config","c","idx","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","trim","regex","str","reversedStr","join","cidx","firstChar","match","triggerIdx","menuDimensions","windowWidth","innerWidth","windowHeight","innerHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","width","menuBottom","menuLeft","Math","floor","ceil","dimensions","offsetWidth","offsetHeight","flipped","div","id","body","computed","whiteSpace","wordWrap","visibility","prop","span0","replace","span","span2","rect","spanRect","removeChild","getFixedCoordinatesRelativeToRect","selectedNodePosition","getMenuDimensions","availableSpaceOnTop","availableSpaceOnBottom","availableSpaceOnLeft","availableSpaceOnRight","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","filter","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","best","temp","indexOf","pop","indices","arr","reduce","prev","extract","original","sort","a","b","compare","t","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","console","warn","map","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","items","querySelector","noMatchEvent","positionMenuAtCaret","fragment","_findLiTarget","movementY","menuItemDomOrString","Element","collectionIndex","activeElement","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","textNode","createTextNode","textarea","scrollPos","caretPos","front","back","content","replaceText","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","_isActive","val","matchItem"],"mappings":"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"}